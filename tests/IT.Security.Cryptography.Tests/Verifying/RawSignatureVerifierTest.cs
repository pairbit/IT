using Org.BouncyCastle.Asn1;
using Org.BouncyCastle.Asn1.Cms;
using Org.BouncyCastle.Cms;
using Org.BouncyCastle.Security;
using Org.BouncyCastle.X509;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using System.Text;

namespace IT.Security.Cryptography.Tests.Verifying;

public abstract class RawSignatureVerifierTest
{
    private readonly IRawSignatureVerifier _rawSignatureVerifier;

    public RawSignatureVerifierTest(IRawSignatureVerifier rawSignatureVerifier)
    {
        _rawSignatureVerifier = rawSignatureVerifier;
    }

    [Test]
    public void Verify()
    {
        //ФЕДЕРАЛЬНОЕ КАЗНАЧЕЙСТВО - 256
        var certificateGost256 = "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";

        Verify(
            "01F73EF4D98739FF9E130C9E8E1A4E446E22CFE2682FF3CE2C5DBBA16103EEF03747CF19728C7AC6CF928A32FB77019F46CC139936A9C26CE36A9A0DCFD76B0D",
            "918ECDCAD236F612B51B5787861C33BE8F0E13401F182442FA99690EBB1D1998", certificateGost256);

        Verify(
            "201857EFE67057E89631C14AAE62A4DF0A7B4D7FFFA16DE80A7EDA6326E3A00C1B0733B01AFA8DFE7A5DAD2C09FF1ED651CD1F1BC7582EE5BFFFB665F5134B04",
            "9D6C3DC0847789B6CC7587585BE35F817B0A3DBE01D970961CE0E44F126D8A4C", certificateGost256);

        var message = Encoding.UTF8.GetBytes("Простой <p>текст</p> для \n подписания CadesBES");

        var cadesSign256 = "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";

        VerifyCades(cadesSign256, certificateGost256, message);

        var cadesSign256_detached = "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";

        VerifyCades(cadesSign256_detached, certificateGost256, message);

        //Боровнёва Екатерина Станиславовна - 512
        var certificateGost512 = "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";

        Verify(
            "C0B4E27CC4E9B0D6F5CAD212FF711A848A0A6DAF8D957BF9DAB58A9A21AA5FBD97B522395F306A3B3503A5F446D813D9FC73A7DF012FF37010D20EAE0E433597DADA9573A8A2461B83654CE6F1CDFC3BD4727093E82EC0489C7A206CE6D183D16C3652459B96A60CFBC3126F40FF1D9327FAF28F79B12E6C0237C484AD8A7314",
            "4F5369925B3FAFAA38161BA91C1DD27AAE02D860A9EE14C7234583353BD987794AC28F55B6C5DF261AC53AB42EE9B7D5555768300DA71FF3AB11D9649804EB75", certificateGost512);

        var cadesSign512 = "";
        
        VerifyCades(cadesSign512, certificateGost512, message);

        var cadesSign512_detached = "";

        VerifyCades(cadesSign512_detached, certificateGost512, message);

        //ОРЕШНИКОВ АЛЕКСЕЙ ЮРЬЕВИЧ-20220520
        var cert = "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";
        var cadesSign3 = "";

        VerifyCades(cadesSign3, cert);
    }

    public void Verify(String signatureHex, String hashHex, String certificateBase64)
    {
        var signature = Convert.FromHexString(signatureHex).Reverse().ToArray();
        var hash = Convert.FromHexString(hashHex);
        var certificate = Convert.FromBase64String(certificateBase64);

        var isVerified = _rawSignatureVerifier.Verify(signature, hash, certificate);

        Assert.True(isVerified);
    }

    public void VerifyCades(String signatureCades, String certificateBase64, Byte[]? message = null)
    {
        var cmsSignedData = new CmsSignedData(Convert.FromBase64String(signatureCades));

        var signerInfos = cmsSignedData.GetSignerInfos();

        var signers = signerInfos.GetSigners();

        if (signers.Count != 1) throw new InvalidOperationException($"GetSigners().Count == {signers.Count} != 1");

        var enumerator = signers.GetEnumerator();

        if (!enumerator.MoveNext()) throw new InvalidOperationException($"GetSigners().MoveNext() == false");

        var signer = enumerator.Current as SignerInformation;

        if (signer == null) throw new InvalidOperationException("Signer is null");

        if (message != null)
        {
            var messageDigest = DigestUtilities.CalculateDigest(signer.DigestAlgOid, message);

            var messageDigest2 = GetMessageDigest(signer);

            if (messageDigest.Length != messageDigest2.Length || !messageDigest.SequenceEqual(messageDigest2))
                throw new InvalidOperationException($"MessageDigest не совпадает ('{Convert.ToHexString(messageDigest)}' != '{Convert.ToHexString(messageDigest2)}')");
        }

        var rawSignature = signer.GetSignature();

        var encodedSignedAttributes = signer.GetEncodedSignedAttributes();

        var hash = DigestUtilities.CalculateDigest(signer.DigestAlgOid, encodedSignedAttributes);

        var isVerified = _rawSignatureVerifier.Verify(rawSignature, hash, Convert.FromBase64String(certificateBase64));

        Assert.True(isVerified);
    }

    private static Byte[] GetMessageDigest(SignerInformation signerInfo)
    {
        var signedAttributes = signerInfo.SignedAttributes;

        if (signedAttributes == null) throw new InvalidOperationException("SignedAttributes is null");

        var attrMessageDigest = signedAttributes[CmsAttributes.MessageDigest];

        if (attrMessageDigest == null) throw new InvalidOperationException("MessageDigest is null");

        var attrValues = attrMessageDigest.AttrValues;

        if (attrValues.Count != 1) throw new InvalidOperationException("MessageDigest (AttrValues.Count != 1)");

        var messageDigest = attrValues[0].ToAsn1Object() as Asn1OctetString;

        if (messageDigest == null) throw new InvalidOperationException("MessageDigest.AttrValues[0] != Asn1OctetString");

        return messageDigest.GetOctets();
    }

    public static bool Verify(string data, string signature, X509Certificate2 serverCert)
    {
        try
        {
            using (var publicKey = serverCert.GetRSAPublicKey())
            {
                var dataByteArray = Encoding.UTF8.GetBytes(data);
                var signatureByteArray = Convert.FromBase64String(signature);
                return publicKey.VerifyData(
                    data: dataByteArray,
                    signature: signatureByteArray,
                    hashAlgorithm: HashAlgorithmName.SHA256,
                    padding: RSASignaturePadding.Pkcs1);
            }
        }
        catch (System.Exception)
        {
            return false;
        }
    }

    internal static Byte[] GetSignatureValue(Byte[] sign, out Byte[]? data, out Byte[] hash)
    {
        var asn1 = Asn1Object.FromByteArray(sign);

        if (asn1 is DerSequence seq1 && seq1.Count > 1 && seq1[0] is DerObjectIdentifier doid && doid.Id == "1.2.840.113549.1.7.2" &&
            seq1[1] is DerTaggedObject dto && dto.GetObject() is DerSequence seq2 &&
            seq2.Count > 4 && seq2[4] is DerSet set && set.Count > 0 && set[0] is DerSequence seq3 &&
            seq3.Count > 5 && seq3[5] is DerOctetString str)
        {
            var seq4 = seq2[2] as DerSequence;
            if (seq4.Count > 1)
            {
                var tobj = seq4[1] as DerTaggedObject;
                var str2 = tobj.GetObject() as DerOctetString;
                data = str2.GetOctets();
            }
            else
            {
                data = null;
            }
            var der = seq3[3] as DerTaggedObject;
            var seq5 = der.GetObject() as DerSequence;
            var seq6 = seq5[2] as DerSequence;
            var set2 = seq6[1] as DerSet;
            var seq7 = set2[0] as DerOctetString;
            hash = seq7.GetOctets();

            return str.GetOctets();
        }

        throw new InvalidOperationException("SignatureValue not found");
    }

    internal static Byte[] GetSignatureValue(Byte[] sign)
    {
        var asn1 = Asn1Object.FromByteArray(sign);

        if (asn1 is DerSequence seq1 && seq1.Count > 1 && seq1[0] is DerObjectIdentifier doid && doid.Id == "1.2.840.113549.1.7.2" &&
            seq1[1] is DerTaggedObject dto && dto.GetObject() is DerSequence seq2 &&
            seq2.Count > 4 && seq2[4] is DerSet set && set.Count > 0 && set[0] is DerSequence seq3 &&
            seq3.Count > 5 && seq3[5] is DerOctetString str)
        {
            return str.GetOctets();
        }

        throw new InvalidOperationException("SignatureValue not found");
    }
}