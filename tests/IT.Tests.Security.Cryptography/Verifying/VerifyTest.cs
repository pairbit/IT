using IT.Security.Cryptography;

namespace IT.Tests.Security.Cryptography.Verifying;

public abstract class VerifyTest
{
    private readonly ISignVerifier _verifier;

    public VerifyTest(ISignVerifier verifier)
    {
        _verifier = verifier;
    }

    [Test]
    public void Verify()
    {
        foreach (var signature in GetSignatures())
        {
            try
            {
                var isVerified = _verifier.IsVerified(signature);

                Console.Write(isVerified);
            }
            catch (Exception ex)
            {
                Console.BackgroundColor = ConsoleColor.DarkRed;
                Console.Write(ex.Message);
                Console.ResetColor();
            }
            Console.WriteLine();
        }
    }

    private IEnumerable<string> GetSignatures()
    {
        yield return "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";

        yield return "PD94bWwgdmVyc2lvbj0iMS4wIj8+CjxEb2M+TXkgRGF0YSBmb3IgU2lnbjxTaWduYXR1cmUgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiIElkPSJJZC1zaWctNDRlMjIzNGZiYjViNjNhNWEzNmQ5NmEyZTQxZjkzZDgxYWViIj48U2lnbmVkSW5mbz48Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPjxTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJ1cm46aWV0ZjpwYXJhbXM6eG1sOm5zOmNweG1sc2VjOmFsZ29yaXRobXM6Z29zdHIzNDEwMjAxMi1nb3N0cjM0MTEyMDEyLTI1NiIvPjxSZWZlcmVuY2UgVVJJPSIiIElkPSJJZC1kYXRhcmVmLWFhMzdhYjIwNDhkNGJmNmU1NDM5NzAxODY1NzU1ZDQ1NTJiOSI+PFRyYW5zZm9ybXM+PFRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNlbnZlbG9wZWQtc2lnbmF0dXJlIi8+PC9UcmFuc2Zvcm1zPjxEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJ1cm46aWV0ZjpwYXJhbXM6eG1sOm5zOmNweG1sc2VjOmFsZ29yaXRobXM6Z29zdHIzNDExMjAxMi0yNTYiLz48RGlnZXN0VmFsdWU+RmJuQkVjUTVSa3U5Z2JCdHI5NDZQT1ZXbWpEUUtPZU1MUitMdElOU2plcz08L0RpZ2VzdFZhbHVlPjwvUmVmZXJlbmNlPjxSZWZlcmVuY2UgVHlwZT0iaHR0cDovL3d3dy53My5vcmcvVFIvMjAwMi9SRUMteG1sZHNpZy1jb3JlLTIwMDIwMjEyL3htbGRzaWctY29yZS1zY2hlbWEueHNkI1g1MDlEYXRhIiBVUkk9IiNJZC1rZXlpbmZvLTg3NmViNzY3YjYwYjJjYTRkNDUwY2E3ZmY5ZDYwZDBkNzcwOCIgSWQ9IklkLWtleWluZm9yZWYtYTQyNWZjZWMwM2JjZTIyNzc4NGVjY2U4MTJjZmZmNWEzODE3Ij48VHJhbnNmb3Jtcz48VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+PC9UcmFuc2Zvcm1zPjxEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJ1cm46aWV0ZjpwYXJhbXM6eG1sOm5zOmNweG1sc2VjOmFsZ29yaXRobXM6Z29zdHIzNDExMjAxMi0yNTYiLz48RGlnZXN0VmFsdWU+ZlorZmVvSEpuMlVibm5WY1B1Ty9MbFB1N1VUU1lpZlp1RHBjV20wK2cwWT08L0RpZ2VzdFZhbHVlPjwvUmVmZXJlbmNlPjxSZWZlcmVuY2UgVVJJPSIjSWQtc3AtMTI3YWIzNmM3ZGFiNjQ4NWQ1MTJjMjQyYjJjZjcxN2MxYzNmIiBJZD0iSWQtcmVmLWIzN2E1OWJjZmUzMGI3ZTNkN2U1OGExOGY2ZDk1OWM5NTAwOCI+PFRyYW5zZm9ybXM+PFRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPjwvVHJhbnNmb3Jtcz48RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0idXJuOmlldGY6cGFyYW1zOnhtbDpuczpjcHhtbHNlYzphbGdvcml0aG1zOmdvc3RyMzQxMTIwMTItMjU2Ii8+PERpZ2VzdFZhbHVlPjR0RTdaR2tUemp0SHovNnFHNDgwQmhmd3ROY1hHN1dSUFNHcUl4U0VVbEk9PC9EaWdlc3RWYWx1ZT48L1JlZmVyZW5jZT48L1NpZ25lZEluZm8+PFNpZ25hdHVyZVZhbHVlPkswUk1hbzcvVjYzdkVTK3pOZTJHOWF1WFVHWHlUL1QyTnRCSEE5M2tlV29wUWdjbG5zdXQrZSt5bXNVTnpWODIKc1ZWNFFWOTZWS2FmNkR5anhjanphdz09PC9TaWduYXR1cmVWYWx1ZT48S2V5SW5mbyBJZD0iSWQta2V5aW5mby04NzZlYjc2N2I2MGIyY2E0ZDQ1MGNhN2ZmOWQ2MGQwZDc3MDgiPjxYNTA5RGF0YT48WDUwOUNlcnRpZmljYXRlPk1JSUlBekNDQjdDZ0F3SUJBZ0lDRmlRd0NnWUlLb1VEQndFQkF3SXdnZ0ZaTVNBd0hnWUpLb1pJaHZjTkFRa0IKRmhGMVkxOW1hMEJ5YjNOcllYcHVZUzV5ZFRFWk1CY0dBMVVFQ0F3UTBMTXVJTkNjMEw3UmdkQzYwTExRc0RFYQpNQmdHQ0NxRkF3T0JBd0VCRWd3d01EYzNNVEExTmpnM05qQXhHREFXQmdVcWhRTmtBUklOTVRBME56YzVOekF4Ck9UZ3pNREVzTUNvR0ExVUVDUXdqMFlQUXU5QzQwWWJRc0NEUW1OQzcwWXpRdU5DOTBMclFzQ3dnMExUUXZ0QzgKSURjeEZUQVRCZ05WQkFjTUROQ2MwTDdSZ2RDNjBMTFFzREVMTUFrR0ExVUVCaE1DVWxVeFNEQkdCZ05WQkFvTQpQOUNmMEw3UXROR0gwTGpRdmRHUjBMM1F2ZEdMMExrZzBZTFF0ZEdCMFlMUXZ0Q3kwWXZRdVNEUW85Q21JTkNrCjBKb2cwSlBRbnRDaDBLSXRNakF4TWpGSU1FWUdBMVVFQXd3LzBKL1F2dEMwMFlmUXVOQzkwWkhRdmRDOTBZdlEKdVNEUmd0QzEwWUhSZ3RDKzBMTFJpOUM1SU5DajBLWWcwS1RRbWlEUWs5Q2UwS0hRb2kweU1ERXlNQjRYRFRJeApNRFV4T1RFME5EZ3pNVm9YRFRJeU1EZ3hPVEUwTkRnek1Wb3dnZ0hiTVJvd0dBWUlLb1VEQTRFREFRRVNEREF3Ck56Y3hNRFUyT0RjMk1ERVlNQllHQlNxRkEyUUJFZzB4TURRM056azNNREU1T0RNd01WNHdYQVlEVlFRSkRGWFEKa2RDKzBMdlJqTkdJMEw3UXVTRFFsOUM3MExEUmd0QyswWVBSZ2RHQzBMalF2ZEdCMExyUXVOQzVJTkMvMExYUgpnTkMxMFlQUXU5QyswTG9nMExRdUlEWWcwWUhSZ3RHQTBMN1F0ZEM5MExqUXRTQXhNUjh3SFFZSktvWklodmNOCkFRa0JGaEJwYzJaclFISnZjMnRoZW01aExuSjFNUXN3Q1FZRFZRUUdFd0pTVlRFWk1CY0dBMVVFQ0F3UTBMTXUKSU5DYzBMN1JnZEM2MExMUXNERVZNQk1HQTFVRUJ3d00wSnpRdnRHQjBMclFzdEN3TVRnd05nWURWUVFLREMvUQpwTkMxMExUUXRkR0EwTERRdTlHTTBMM1F2dEMxSU5DNjBMRFF0OUM5MExEUmg5QzEwTG5SZ2RHQzBMTFF2akZaCk1GY0dBMVVFQ3d4UTBLUFF2OUdBMExEUXN0QzcwTFhRdmRDNDBMVWcwTGpRdmRHRTBMN1JnTkM4MExEUmh0QzQKMEw3UXZkQzkwTDdRdVNEUXVOQzkwWVRSZ05DdzBZSFJndEdBMFlQUXV0R0MwWVBSZ05DKzBMa3hGREFTQmdrcQpoa2lHOXcwQkNRSU1CV0Z6Y0Y5dE1UZ3dOZ1lEVlFRRERDL1FwTkMxMExUUXRkR0EwTERRdTlHTTBMM1F2dEMxCklOQzYwTERRdDlDOTBMRFJoOUMxMExuUmdkR0MwTExRdmpCb01DRUdDQ3FGQXdjQkFRRUJNQlVHQ1NxRkF3Y0IKQWdFQkFRWUlLb1VEQndFQkFnSURRd0FFUUdkMHkxbDJaYU9nSGRVOVo1RlFjNnBWVDgyckhjVkROcktVcGRBRQpqWGNNNjdCSlF2TTJ0ZjZETGZ6TkdUdCtLREN4QW92bThhRkw2M0tpanFrN0pJV2pnZ1BSTUlJRHpUQU1CZ05WCkhSTUJBZjhFQWpBQU1CMEdBMVVkSUFRV01CUXdDQVlHS29VRFpIRUJNQWdHQmlxRkEyUnhBakJJQmdVcWhRTmsKYndRL0REMGkwSnJSZ05DNDBML1JndEMrTGRDZjBZRFF2aUJEVTFBaUlIWXVOQzR3SUNqUXVOR0IwTC9RdnRDNwowTDNRdGRDOTBMalF0U0F5TFVKaGMyVXBNSUlCQXdZRktvVURaSEFFZ2Zrd2dmWU1KOUNhMFlEUXVOQy8wWUxRCnZ0Q2YwWURRdmlCRFUxQWcwTExRdGRHQTBZSFF1TkdQSURRdU1Bd28wSi9Ra05DYUlGVk9TVU5GVWxRZzBKUFEKbnRDaDBLSWcwTExRdGRHQTBZSFF1TkdQSURNdU1ReFAwS0hRdGRHQTBZTFF1TkdFMExqUXV0Q3cwWUlnMFlIUQp2dEMrMFlMUXN0QzEwWUxSZ2RHQzBMTFF1TkdQSU9LRWxpRFFvZENrTHpFeU5DMHlPRFkwSU5DKzBZSWdNakF1Ck1ETXVNakF4Tmd4UTBLSFF0ZEdBMFlMUXVOR0UwTGpRdXRDdzBZSWcwWUhRdnRDKzBZTFFzdEMxMFlMUmdkR0MKMExMUXVOR1BJT0tFbGlBZzBLSFFwQzg1T1RrdE9UazVPU0RRdnRHQ0lETXhMakV3TGpJd01UY3dEZ1lEVlIwUApBUUgvQkFRREFnUDRNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01DQmdnckJnRUZCUWNEQXpBckJnTlZIUkFFCkpEQWlnQTh5TURJeE1EVXhPVEUwTkRneU9WcUJEekl3TWpJd09ERTVNVFEwT0RJNVdqQ0NBWTRHQTFVZEl3U0MKQVlVd2dnR0JnQlJudEJrMjV0RlFST0dhNGNzSzdHOTducVpjRXFHQ0FWV2tnZ0ZSTUlJQlRURWdNQjRHQ1NxRwpTSWIzRFFFSkFSWVJhWE5mZFdOQWNtOXphMkY2Ym1FdWNuVXhHREFXQmdVcWhRTmtBUklOTVRBME56YzVOekF4Ck9UZ3pNREVhTUJnR0NDcUZBd09CQXdFQkVnd3dNRGMzTVRBMU5qZzNOakF4Q3pBSkJnTlZCQVlUQWxKVk1Sa3cKRndZRFZRUUlEQkRRc3k0ZzBKelF2dEdCMExyUXN0Q3dNUlV3RXdZRFZRUUhEQXpRbk5DKzBZSFF1dEN5MExBeApMREFxQmdOVkJBa01JOUdEMEx2UXVOR0cwTEFnMEpqUXU5R00wTGpRdmRDNjBMQXNJTkMwMEw3UXZDQTNNVUl3ClFBWURWUVFLRERuUW10QyswWURRdmRDMTBMTFF2dEM1SU5HQzBMWFJnZEdDMEw3UXN0R0wwTGtnMEtQUXBpRFEKcE5DYUlOQ1QwSjdRb2RDaUxUSXdNVEl4UWpCQUJnTlZCQU1NT2RDYTBMN1JnTkM5MExYUXN0QyswTGtnMFlMUQp0ZEdCMFlMUXZ0Q3kwWXZRdVNEUW85Q21JTkNrMEpvZzBKUFFudENoMEtJdE1qQXhNb0lRTnZkTEJha1lOTHZvCkVaVGkvMCtyZVRCQUJnTlZIUjhFT1RBM01EV2dNNkF4aGk5b2RIUndPaTh2WTNKc0xuSnZjMnRoZW01aExuSjEKTDJOeWJDOTBaWE4wTDNOMVltZHZjM1F5TURFeUxtTnliREFkQmdOVkhRNEVGZ1FVdlA1RTNVZTQ4azVZUiswTApDcTNHZThGOVFPRXdDZ1lJS29VREJ3RUJBd0lEUVFCdEtUaWI1M096a0kvbnJyL3FlTWt5U3dRWU1OVFpQdmRMCi9TdC9sYnJWUHdmMlNqNmRMSGZ2OVJlR3BKNkhVeGJYOFRKaHJCQ1YvZFFxQXFKZy9HeUg8L1g1MDlDZXJ0aWZpY2F0ZT48L1g1MDlEYXRhPjwvS2V5SW5mbz48T2JqZWN0PjxRdWFsaWZ5aW5nUHJvcGVydGllcyB4bWxucz0iaHR0cDovL3VyaS5ldHNpLm9yZy8wMTkwMy92MS40LjEjIiBUYXJnZXQ9IklkLXNpZy00NGUyMjM0ZmJiNWI2M2E1YTM2ZDk2YTJlNDFmOTNkODFhZWIiPjxTaWduZWRQcm9wZXJ0aWVzIElkPSJJZC1zcC0xMjdhYjM2YzdkYWI2NDg1ZDUxMmMyNDJiMmNmNzE3YzFjM2YiPjxTaWduZWRTaWduYXR1cmVQcm9wZXJ0aWVzIElkPSJJZC1zc3AtMjFjNGU0YTFkYzY5MTNiZWUxNDE4ZWY5M2E5MjdlNDkzNDQzIi8+PC9TaWduZWRQcm9wZXJ0aWVzPjwvUXVhbGlmeWluZ1Byb3BlcnRpZXM+PC9PYmplY3Q+PC9TaWduYXR1cmU+PC9Eb2M+Cg==";

        yield return "PD94bWwgdmVyc2lvbj0iMS4wIj8+CjxEb2M+TXkgRGF0YSBmb3IgU2lnbjxTaWduYXR1cmUgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiIElkPSJJZC1zaWctYjEyNGQ0OTA2Njk2NGNlOTYyM2JiMDFkN2RlYmRiYzMwN2Q1Ij48U2lnbmVkSW5mbz48Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPjxTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJ1cm46aWV0ZjpwYXJhbXM6eG1sOm5zOmNweG1sc2VjOmFsZ29yaXRobXM6Z29zdHIzNDEwMjAxMi1nb3N0cjM0MTEyMDEyLTI1NiIvPjxSZWZlcmVuY2UgVVJJPSIiIElkPSJJZC1kYXRhcmVmLWIzMWM2MDc5MzJlYTJhNDNmZTE4OTMwNDc1N2FlYTM0MjhmNSI+PFRyYW5zZm9ybXM+PFRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNlbnZlbG9wZWQtc2lnbmF0dXJlIi8+PC9UcmFuc2Zvcm1zPjxEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJ1cm46aWV0ZjpwYXJhbXM6eG1sOm5zOmNweG1sc2VjOmFsZ29yaXRobXM6Z29zdHIzNDExMjAxMi0yNTYiLz48RGlnZXN0VmFsdWU+RmJuQkVjUTVSa3U5Z2JCdHI5NDZQT1ZXbWpEUUtPZU1MUitMdElOU2plcz08L0RpZ2VzdFZhbHVlPjwvUmVmZXJlbmNlPjwvU2lnbmVkSW5mbz48U2lnbmF0dXJlVmFsdWU+R1ZvVmxQRUh3TGhucGlqbW9JWEorZEZPQW40VlhHVWxaTCttRTloV0wvd0lsdXhvK3FzZXlVMjY2di9qTm1OUAovaldTanBxVnlwQW41NW03UzE0QlNnPT08L1NpZ25hdHVyZVZhbHVlPjxLZXlJbmZvIElkPSJJZC1rZXlpbmZvLWJmMzc4NzJhMDJhNjlkNjQwMjUwYzBmZTFhYmQ2OTUzMzczYSI+PFg1MDlEYXRhPjxYNTA5Q2VydGlmaWNhdGU+TUlJSUF6Q0NCN0NnQXdJQkFnSUNGaVF3Q2dZSUtvVURCd0VCQXdJd2dnRlpNU0F3SGdZSktvWklodmNOQVFrQgpGaEYxWTE5bWEwQnliM05yWVhwdVlTNXlkVEVaTUJjR0ExVUVDQXdRMExNdUlOQ2MwTDdSZ2RDNjBMTFFzREVhCk1CZ0dDQ3FGQXdPQkF3RUJFZ3d3TURjM01UQTFOamczTmpBeEdEQVdCZ1VxaFFOa0FSSU5NVEEwTnpjNU56QXgKT1Rnek1ERXNNQ29HQTFVRUNRd2owWVBRdTlDNDBZYlFzQ0RRbU5DNzBZelF1TkM5MExyUXNDd2cwTFRRdnRDOApJRGN4RlRBVEJnTlZCQWNNRE5DYzBMN1JnZEM2MExMUXNERUxNQWtHQTFVRUJoTUNVbFV4U0RCR0JnTlZCQW9NClA5Q2YwTDdRdE5HSDBMalF2ZEdSMEwzUXZkR0wwTGtnMFlMUXRkR0IwWUxRdnRDeTBZdlF1U0RRbzlDbUlOQ2sKMEpvZzBKUFFudENoMEtJdE1qQXhNakZJTUVZR0ExVUVBd3cvMEovUXZ0QzAwWWZRdU5DOTBaSFF2ZEM5MFl2UQp1U0RSZ3RDMTBZSFJndEMrMExMUmk5QzVJTkNqMEtZZzBLVFFtaURRazlDZTBLSFFvaTB5TURFeU1CNFhEVEl4Ck1EVXhPVEUwTkRnek1Wb1hEVEl5TURneE9URTBORGd6TVZvd2dnSGJNUm93R0FZSUtvVURBNEVEQVFFU0REQXcKTnpjeE1EVTJPRGMyTURFWU1CWUdCU3FGQTJRQkVnMHhNRFEzTnprM01ERTVPRE13TVY0d1hBWURWUVFKREZYUQprZEMrMEx2UmpOR0kwTDdRdVNEUWw5QzcwTERSZ3RDKzBZUFJnZEdDMExqUXZkR0IwTHJRdU5DNUlOQy8wTFhSCmdOQzEwWVBRdTlDKzBMb2cwTFF1SURZZzBZSFJndEdBMEw3UXRkQzkwTGpRdFNBeE1SOHdIUVlKS29aSWh2Y04KQVFrQkZoQnBjMlpyUUhKdmMydGhlbTVoTG5KMU1Rc3dDUVlEVlFRR0V3SlNWVEVaTUJjR0ExVUVDQXdRMExNdQpJTkNjMEw3UmdkQzYwTExRc0RFVk1CTUdBMVVFQnd3TTBKelF2dEdCMExyUXN0Q3dNVGd3TmdZRFZRUUtEQy9RCnBOQzEwTFRRdGRHQTBMRFF1OUdNMEwzUXZ0QzFJTkM2MExEUXQ5QzkwTERSaDlDMTBMblJnZEdDMExMUXZqRloKTUZjR0ExVUVDd3hRMEtQUXY5R0EwTERRc3RDNzBMWFF2ZEM0MExVZzBMalF2ZEdFMEw3UmdOQzgwTERSaHRDNAowTDdRdmRDOTBMN1F1U0RRdU5DOTBZVFJnTkN3MFlIUmd0R0EwWVBRdXRHQzBZUFJnTkMrMExreEZEQVNCZ2txCmhraUc5dzBCQ1FJTUJXRnpjRjl0TVRnd05nWURWUVFEREMvUXBOQzEwTFRRdGRHQTBMRFF1OUdNMEwzUXZ0QzEKSU5DNjBMRFF0OUM5MExEUmg5QzEwTG5SZ2RHQzBMTFF2akJvTUNFR0NDcUZBd2NCQVFFQk1CVUdDU3FGQXdjQgpBZ0VCQVFZSUtvVURCd0VCQWdJRFF3QUVRR2QweTFsMlphT2dIZFU5WjVGUWM2cFZUODJySGNWRE5yS1VwZEFFCmpYY002N0JKUXZNMnRmNkRMZnpOR1R0K0tEQ3hBb3ZtOGFGTDYzS2lqcWs3SklXamdnUFJNSUlEelRBTUJnTlYKSFJNQkFmOEVBakFBTUIwR0ExVWRJQVFXTUJRd0NBWUdLb1VEWkhFQk1BZ0dCaXFGQTJSeEFqQklCZ1VxaFFOawpid1EvREQwaTBKclJnTkM0MEwvUmd0QytMZENmMFlEUXZpQkRVMUFpSUhZdU5DNHdJQ2pRdU5HQjBML1F2dEM3CjBMM1F0ZEM5MExqUXRTQXlMVUpoYzJVcE1JSUJBd1lGS29VRFpIQUVnZmt3Z2ZZTUo5Q2EwWURRdU5DLzBZTFEKdnRDZjBZRFF2aUJEVTFBZzBMTFF0ZEdBMFlIUXVOR1BJRFF1TUF3bzBKL1FrTkNhSUZWT1NVTkZVbFFnMEpQUQpudENoMEtJZzBMTFF0ZEdBMFlIUXVOR1BJRE11TVF4UDBLSFF0ZEdBMFlMUXVOR0UwTGpRdXRDdzBZSWcwWUhRCnZ0QyswWUxRc3RDMTBZTFJnZEdDMExMUXVOR1BJT0tFbGlEUW9kQ2tMekV5TkMweU9EWTBJTkMrMFlJZ01qQXUKTURNdU1qQXhOZ3hRMEtIUXRkR0EwWUxRdU5HRTBMalF1dEN3MFlJZzBZSFF2dEMrMFlMUXN0QzEwWUxSZ2RHQwowTExRdU5HUElPS0VsaUFnMEtIUXBDODVPVGt0T1RrNU9TRFF2dEdDSURNeExqRXdMakl3TVRjd0RnWURWUjBQCkFRSC9CQVFEQWdQNE1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBekFyQmdOVkhSQUUKSkRBaWdBOHlNREl4TURVeE9URTBORGd5T1ZxQkR6SXdNakl3T0RFNU1UUTBPREk1V2pDQ0FZNEdBMVVkSXdTQwpBWVV3Z2dHQmdCUm50QmsyNXRGUVJPR2E0Y3NLN0c5N25xWmNFcUdDQVZXa2dnRlJNSUlCVFRFZ01CNEdDU3FHClNJYjNEUUVKQVJZUmFYTmZkV05BY205emEyRjZibUV1Y25VeEdEQVdCZ1VxaFFOa0FSSU5NVEEwTnpjNU56QXgKT1Rnek1ERWFNQmdHQ0NxRkF3T0JBd0VCRWd3d01EYzNNVEExTmpnM05qQXhDekFKQmdOVkJBWVRBbEpWTVJrdwpGd1lEVlFRSURCRFFzeTRnMEp6UXZ0R0IwTHJRc3RDd01SVXdFd1lEVlFRSERBelFuTkMrMFlIUXV0Q3kwTEF4CkxEQXFCZ05WQkFrTUk5R0QwTHZRdU5HRzBMQWcwSmpRdTlHTTBMalF2ZEM2MExBc0lOQzAwTDdRdkNBM01VSXcKUUFZRFZRUUtERG5RbXRDKzBZRFF2ZEMxMExMUXZ0QzVJTkdDMExYUmdkR0MwTDdRc3RHTDBMa2cwS1BRcGlEUQpwTkNhSU5DVDBKN1FvZENpTFRJd01USXhRakJBQmdOVkJBTU1PZENhMEw3UmdOQzkwTFhRc3RDKzBMa2cwWUxRCnRkR0IwWUxRdnRDeTBZdlF1U0RRbzlDbUlOQ2swSm9nMEpQUW50Q2gwS0l0TWpBeE1vSVFOdmRMQmFrWU5Mdm8KRVpUaS8wK3JlVEJBQmdOVkhSOEVPVEEzTURXZ002QXhoaTlvZEhSd09pOHZZM0pzTG5KdmMydGhlbTVoTG5KMQpMMk55YkM5MFpYTjBMM04xWW1kdmMzUXlNREV5TG1OeWJEQWRCZ05WSFE0RUZnUVV2UDVFM1VlNDhrNVlSKzBMCkNxM0dlOEY5UU9Fd0NnWUlLb1VEQndFQkF3SURRUUJ0S1RpYjUzT3prSS9ucnIvcWVNa3lTd1FZTU5UWlB2ZEwKL1N0L2xiclZQd2YyU2o2ZExIZnY5UmVHcEo2SFV4Ylg4VEpockJDVi9kUXFBcUpnL0d5SDwvWDUwOUNlcnRpZmljYXRlPjwvWDUwOURhdGE+PC9LZXlJbmZvPjwvU2lnbmF0dXJlPjwvRG9jPgo=";
    }
}
